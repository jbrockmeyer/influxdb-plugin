<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.test.TestServiceImplTest" time="296.341" tests="30" errors="0" skipped="0" failures="4">
  <properties>
    <property name="sun.lang.ClassLoader.allowArraySyntax" value="true"/>
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
    <property name="sun.boot.library.path" value="C:\Program Files\Java\jdk1.8.0_144\jre\bin"/>
    <property name="java.vm.version" value="25.144-b01"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="maven.multiModuleProjectDirectory" value="C:\Source\testplugin"/>
    <property name="java.vendor.url" value="http://java.oracle.com/"/>
    <property name="path.separator" value=";"/>
    <property name="guice.disable.misplaced.annotation.check" value="true"/>
    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
    <property name="file.encoding.pkg" value="sun.io"/>
    <property name="user.script" value=""/>
    <property name="user.country" value="CA"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="sun.os.patch.level" value=""/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="user.dir" value="C:\Source\testplugin"/>
    <property name="java.runtime.version" value="1.8.0_144-b01"/>
    <property name="java.awt.graphicsenv" value="sun.awt.Win32GraphicsEnvironment"/>
    <property name="java.endorsed.dirs" value="C:\Program Files\Java\jdk1.8.0_144\jre\lib\endorsed"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.io.tmpdir" value="C:\Users\~1\AppData\Local\Temp\"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="user.variant" value=""/>
    <property name="os.name" value="Windows 10"/>
    <property name="classworlds.conf" value="C:\Work\apache-maven-3.3.9\bin\m2.conf"/>
    <property name="sun.jnu.encoding" value="Cp1252"/>
    <property name="java.library.path" value="C:\Program Files\Java\jdk1.8.0_144\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Docker\Docker\Resources\bin;C:\Program Files (x86)\Intel\iCLS Client\;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Git\cmd;C:\Program Files\TortoiseGit\bin;C:\Program Files\Java\jdk1.8.0_144\bin;C:\Work\apache-maven-3.3.9\bin;C:\Work\mysql-5.6.38-winx64\bin;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\nodejs\;C:\Program Files (x86)\Windows Kits\10\Windows Performance Toolkit\;C:\Windows\system32\config\systemprofile\.dnx\bin;C:\Program Files\Microsoft DNX\Dnvm\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\PuTTY\;C:\ProgramData\chocolatey\bin;C:\Users\user\AppData\Local\Microsoft\WindowsApps;C:\Users\user\AppData\Roaming\npm;C:\Users\user\Desktop\Startup Scripts;;."/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.class.version" value="52.0"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="os.version" value="10.0"/>
    <property name="user.home" value="C:\Users\user"/>
    <property name="user.timezone" value="America/Los_Angeles"/>
    <property name="java.awt.printerjob" value="sun.awt.windows.WPrinterJob"/>
    <property name="java.specification.version" value="1.8"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="user.name" value="user"/>
    <property name="java.class.path" value="C:\Work\apache-maven-3.3.9\boot\plexus-classworlds-2.5.2.jar"/>
    <property name="java.vm.specification.version" value="1.8"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.home" value="C:\Program Files\Java\jdk1.8.0_144\jre"/>
    <property name="sun.java.command" value="org.codehaus.plexus.classworlds.launcher.Launcher clean install -T3"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="user.language" value="en"/>
    <property name="awt.toolkit" value="sun.awt.windows.WToolkit"/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.version" value="1.8.0_144"/>
    <property name="java.ext.dirs" value="C:\Program Files\Java\jdk1.8.0_144\jre\lib\ext;C:\Windows\Sun\Java\lib\ext"/>
    <property name="sun.boot.class.path" value="C:\Program Files\Java\jdk1.8.0_144\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_144\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_144\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_144\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_144\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_144\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_144\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_144\jre\classes"/>
    <property name="sun.stderr.encoding" value="cp437"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="maven.home" value="C:\Work\apache-maven-3.3.9"/>
    <property name="file.separator" value="\"/>
    <property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="sun.stdout.encoding" value="cp437"/>
    <property name="sun.desktop" value="windows"/>
    <property name="sun.cpu.isalist" value="amd64"/>
  </properties>
  <testcase name="verifyFindWithRevokedConsentsLatestReturnsEmptyMapWhenNoTestFound" classname="com.test.TestServiceImplTest" time="10.351"/>
  <testcase name="verifyFindWithGrantedConsentsLatestReturnsAllAvailableConsentsMapWhenThereIsGrantedConsentForTheClashingTest" classname="com.test.TestServiceImplTest" time="10.547"/>
  <testcase name="verifyFindByKeyAndLocationReturnsTestWhenExists" classname="com.test.TestServiceImplTest" time="9.627"/>
  <testcase name="verifyReturnsListOfAllTestsWhenUsingListMethod" classname="com.test.TestServiceImplTest" time="9.408"/>
  <testcase name="verifyFindWithRevokedConsentsLatestReturnsOneKeyTwoTestOneTestMap" classname="com.test.TestServiceImplTest" time="10.924"/>
  <testcase name="verifyReturnsTestBeanWhenUsingLoadMethodPassedInUidPKIsLessThanZero" classname="com.test.TestServiceImplTest" time="9.66">
    <failure message="expected:&lt;[tru]e&gt; but was:&lt;[fals]e&gt;" type="org.junit.ComparisonFailure"><![CDATA[org.junit.ComparisonFailure: expected:<[tru]e> but was:<[fals]e>
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at com.test.TestServiceImplTest.verifyReturnsTestBeanWhenUsingLoadMethodPassedInUidPKIsLessThanZero(TestServiceImplTest.java:118)
]]></failure>
    <system-out><![CDATA[INFO  main 2018-05-01 15:18:39,565 org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:287) - Building JPA container EntityManagerFactory for persistence unit 'commerce-persistence-unit'
WARN  main 2018-05-01 15:18:39,586 org.apache.openjpa.lib.log.SLF4JLogFactory$LogAdapter.warn(SLF4JLogFactory.java:103) - An error occurred while registering a ClassTransformer with PersistenceUnitInfo: name 'commerce-persistence-unit', root URL [file:/C:/Users/user/.m2/repository/com/test/shipping-calculation-epcommerce/0-SNAPSHOT/shipping-calculation-epcommerce-0-SNAPSHOT.jar]. The error has been consumed. To see it, set your openjpa.Runtime log level to TRACE. Load-time class transformation will not be available.
WARN  main 2018-05-01 15:18:39,615 com.test.test.util.search.SearchServerLauncherHostLocator.getNullServerUrlSupplier(SearchServerLauncherHostLocator.java:33) - Returning null Search URL Supplier. If search functionality is required, override the searchServerUrlSupplier bean to supply the actual Search host URL.
WARN  main 2018-05-01 15:18:40,110 org.apache.openjpa.lib.log.SLF4JLogFactory$LogAdapter.warn(SLF4JLogFactory.java:103) - Field "com.test.domain.tax.impl.TaxCategoryImpl.localizedPropertiesMap" declares that it uses class criteria for joins, and this field is not owned by an inverse field.  As a result, it is impossible to correctly null the inverse foreign keys when the field is deleted.  OpenJPA may leave orphan key values in the database if you do not provide an owning inverse relation using the "mapped-by" attribute.
WARN  main 2018-05-01 15:18:40,132 org.apache.openjpa.lib.log.SLF4JLogFactory$LogAdapter.warn(SLF4JLogFactory.java:103) - Field "com.test.domain.rules.impl.AbstractRuleImpl.localizedPropertiesMap" declares that it uses class criteria for joins, and this field is not owned by an inverse field.  As a result, it is impossible to correctly null the inverse foreign keys when the field is deleted.  OpenJPA may leave orphan key values in the database if you do not provide an owning inverse relation using the "mapped-by" attribute.
WARN  main 2018-05-01 15:18:40,245 org.apache.openjpa.lib.log.SLF4JLogFactory$LogAdapter.warn(SLF4JLogFactory.java:103) - Field "com.test.domain.skuconfiguration.impl.SkuOptionValueImpl.localizedPropertiesMap" declares that it uses class criteria for joins, and this field is not owned by an inverse field.  As a result, it is impossible to correctly null the inverse foreign keys when the field is deleted.  OpenJPA may leave orphan key values in the database if you do not provide an owning inverse relation using the "mapped-by" attribute.
WARN  main 2018-05-01 15:18:40,246 org.apache.openjpa.lib.log.SLF4JLogFactory$LogAdapter.warn(SLF4JLogFactory.java:103) - Field "com.test.domain.catalog.impl.BrandImpl.localizedPropertiesMap" declares that it uses class criteria for joins, and this field is not owned by an inverse field.  As a result, it is impossible to correctly null the inverse foreign keys when the field is deleted.  OpenJPA may leave orphan key values in the database if you do not provide an owning inverse relation using the "mapped-by" attribute.
WARN  main 2018-05-01 15:18:40,247 org.apache.openjpa.lib.log.SLF4JLogFactory$LogAdapter.warn(SLF4JLogFactory.java:103) - Field "com.test.domain.skuconfiguration.impl.SkuOptionImpl.localizedPropertiesMap" declares that it uses class criteria for joins, and this field is not owned by an inverse field.  As a result, it is impossible to correctly null the inverse foreign keys when the field is deleted.  OpenJPA may leave orphan key values in the database if you do not provide an owning inverse relation using the "mapped-by" attribute.
WARN  main 2018-05-01 15:18:40,289 org.apache.openjpa.lib.log.SLF4JLogFactory$LogAdapter.warn(SLF4JLogFactory.java:103) - Field "com.test.tags.domain.impl.TagDefinitionImpl.localizedPropertiesMap" declares that it uses class criteria for joins, and this field is not owned by an inverse field.  As a result, it is impossible to correctly null the inverse foreign keys when the field is deleted.  OpenJPA may leave orphan key values in the database if you do not provide an owning inverse relation using the "mapped-by" attribute.
WARN  main 2018-05-01 15:18:40,290 org.apache.openjpa.lib.log.SLF4JLogFactory$LogAdapter.warn(SLF4JLogFactory.java:103) - Field "com.test.tags.domain.impl.TagGroupImpl.localizedPropertiesMap" declares that it uses class criteria for joins, and this field is not owned by an inverse field.  As a result, it is impossible to correctly null the inverse foreign keys when the field is deleted.  OpenJPA may leave orphan key values in the database if you do not provide an owning inverse relation using the "mapped-by" attribute.
WARN  main 2018-05-01 15:18:40,291 org.apache.openjpa.lib.log.SLF4JLogFactory$LogAdapter.warn(SLF4JLogFactory.java:103) - Field "com.test.tags.domain.impl.TagValueTypeImpl.validationConstraints" declares that it uses class criteria for joins, and this field is not owned by an inverse field.  As a result, it is impossible to correctly null the inverse foreign keys when the field is deleted.  OpenJPA may leave orphan key values in the database if you do not provide an owning inverse relation using the "mapped-by" attribute.
WARN  main 2018-05-01 15:18:40,291 org.apache.openjpa.lib.log.SLF4JLogFactory$LogAdapter.warn(SLF4JLogFactory.java:103) - Field "com.test.tags.domain.impl.TagAllowedValueImpl.localizedPropertiesMap" declares that it uses class criteria for joins, and this field is not owned by an inverse field.  As a result, it is impossible to correctly null the inverse foreign keys when the field is deleted.  OpenJPA may leave orphan key values in the database if you do not provide an owning inverse relation using the "mapped-by" attribute.
WARN  main 2018-05-01 15:18:40,292 org.apache.openjpa.lib.log.SLF4JLogFactory$LogAdapter.warn(SLF4JLogFactory.java:103) - Field "com.test.tags.domain.impl.TagOperatorImpl.localizedPropertiesMap" declares that it uses class criteria for joins, and this field is not owned by an inverse field.  As a result, it is impossible to correctly null the inverse foreign keys when the field is deleted.  OpenJPA may leave orphan key values in the database if you do not provide an owning inverse relation using the "mapped-by" attribute.
WARN  main 2018-05-01 15:18:40,293 org.apache.openjpa.lib.log.SLF4JLogFactory$LogAdapter.warn(SLF4JLogFactory.java:103) - Field "com.test.validation.domain.impl.DeclarativeValidationConstraintImpl.localizedPropertiesMap" declares that it uses class criteria for joins, and this field is not owned by an inverse field.  As a result, it is impossible to correctly null the inverse foreign keys when the field is deleted.  OpenJPA may leave orphan key values in the database if you do not provide an owning inverse relation using the "mapped-by" attribute.
WARN  main 2018-05-01 15:18:40,372 org.apache.openjpa.lib.log.SLF4JLogFactory$LogAdapter.warn(SLF4JLogFactory.java:103) - Field "com.test.domain.shipping.impl.ShippingServiceLevelImpl.localizedPropertiesMap" declares that it uses class criteria for joins, and this field is not owned by an inverse field.  As a result, it is impossible to correctly null the inverse foreign keys when the field is deleted.  OpenJPA may leave orphan key values in the database if you do not provide an owning inverse relation using the "mapped-by" attribute.
WARN  main 2018-05-01 15:18:40,451 com.test.persistence.impl.PersistablePostLoadListener.getPostLoadStrategies(PersistablePostLoadListener.java:72) - PersistablePostLoadListener lazy initialization failed because the context is still being initialized and bean [customerPostLoadStrategy] could not be created as a result.This is generally OK as long as it stops happening after the spring context is up.  Will retry on next invocation
WARN  main 2018-05-01 15:18:40,452 com.test.persistence.impl.PersistablePostLoadListener.getPostLoadStrategies(PersistablePostLoadListener.java:72) - PersistablePostLoadListener lazy initialization failed because the context is still being initialized and bean [customerPostLoadStrategy] could not be created as a result.This is generally OK as long as it stops happening after the spring context is up.  Will retry on next invocation
WARN  main 2018-05-01 15:18:40,453 com.test.persistence.impl.PersistablePostLoadListener.getPostLoadStrategies(PersistablePostLoadListener.java:72) - PersistablePostLoadListener lazy initialization failed because the context is still being initialized and bean [customerPostLoadStrategy] could not be created as a result.This is generally OK as long as it stops happening after the spring context is up.  Will retry on next invocation
INFO  main 2018-05-01 15:18:41,727 com.test.commons.util.impl.VersionLogger.init(VersionLogger.java:30) - Commerce Build Information: null 0-SNAPSHOT (r 2018-04-30 09:04:49 PDT ) by null
ERROR main 2018-05-01 15:18:41,768 com.test.commons.util.impl.MessageSourceCacheImpl.init(MessageSourceCacheImpl.java:92) - Theme asset directory not found: C:\Source\ep-commerce\commerce-engine\core\ep-core-itests\target\test-classes\assets\themes
ERROR main 2018-05-01 15:18:41,859 com.test.commons.util.impl.MessageSourceCacheImpl.init(MessageSourceCacheImpl.java:92) - Theme asset directory not found: C:\Source\ep-commerce\commerce-engine\core\ep-core-itests\target\test-classes\assets\themes
INFO  main 2018-05-01 15:18:42,020 org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:441) - Closing JPA EntityManagerFactory for persistence unit 'commerce-persistence-unit'
]]></system-out>
    <system-err><![CDATA[INFO 01/05/18 3:18 PM: liquibase: Successfully acquired change log lock
INFO 01/05/18 3:18 PM: liquibase: Creating database history table with name: PUBLIC.DATABASECHANGELOG
INFO 01/05/18 3:18 PM: liquibase: Successfully released change log lock
]]></system-err>
  </testcase>
  <testcase name="verifyLoadsTestWhenUsingLoadMethodAndTestExists" classname="com.test.TestServiceImplTest" time="9.65"/>
  <testcase name="verifyLoadsTestWhenUsingGetMethodAndTestExists" classname="com.test.TestServiceImplTest" time="9.594"/>
  <testcase name="verifyFindWithRevokedConsentsLatestReturnsOneKeyOneTestOneTestMapWhenOnlyOneTestFound" classname="com.test.TestServiceImplTest" time="9.726"/>
  <testcase name="verifyFindWithGrantedConsentsLatestReturnsOneKeyOneTestTwoTestMap" classname="com.test.TestServiceImplTest" time="9.452"/>
  <testcase name="verifyFindWithGrantedConsentsLatestReturnsTwoKeysTwoTestOneTestMap" classname="com.test.TestServiceImplTest" time="11.73"/>
  <testcase name="verifyReturnsTestBeanWhenUsingGetMethodPassedInUidPKIsLessThanZero" classname="com.test.TestServiceImplTest" time="10.224"/>
  <testcase name="verifyDbExceptionIsThrownWhenTryingToSaveTestWithExistingKeyLocationCombination" classname="com.test.TestServiceImplTest" time="10.124">
    <failure message="&#10;Expecting:&#10; &lt;org.springframework.dao.DataIntegrityViolationException: The transaction has been rolled back.  See the nested exceptions for details on the errors that occurred.; nested exception is &lt;openjpa-2.4.0-ep2.0-rexported fatal store error&gt; org.apache.openjpa.persistence.EntityExistsException: The transaction has been rolled back.  See the nested exceptions for details on the errors that occurred.&#10;FailedObject: com.test.domain.test.impl.TestImpl@40a988e7&gt;&#10;to be an instance of:&#10; &lt;java.lang.SecurityException&gt;&#10;but was instance of:&#10; &lt;org.springframework.dao.DataIntegrityViolationException&gt;" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: 
Expecting:
 <org.springframework.dao.DataIntegrityViolationException: The transaction has been rolled back.  See the nested exceptions for details on the errors that occurred.; nested exception is <openjpa-2.4.0-ep2.0-rexported fatal store error> org.apache.openjpa.persistence.EntityExistsException: The transaction has been rolled back.  See the nested exceptions for details on the errors that occurred.
FailedObject: com.test.domain.test.impl.TestImpl@40a988e7>
to be an instance of:
 <java.lang.SecurityException>
but was instance of:
 <org.springframework.dao.DataIntegrityViolationException>
	at com.test.TestServiceImplTest.verifyDbExceptionIsThrownWhenTryingToSaveTestWithExistingKeyLocationCombination(TestServiceImplTest.java:149)
]]></failure>
    <system-out><![CDATA[INFO  main 2018-05-01 15:19:50,045 org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:287) - Building JPA container EntityManagerFactory for persistence unit 'commerce-persistence-unit'
WARN  main 2018-05-01 15:19:50,067 org.apache.openjpa.lib.log.SLF4JLogFactory$LogAdapter.warn(SLF4JLogFactory.java:103) - An error occurred while registering a ClassTransformer with PersistenceUnitInfo: name 'commerce-persistence-unit', root URL [file:/C:/Users/user/.m2/repository/com/test/shipping-calculation-epcommerce/0-SNAPSHOT/shipping-calculation-epcommerce-0-SNAPSHOT.jar]. The error has been consumed. To see it, set your openjpa.Runtime log level to TRACE. Load-time class transformation will not be available.
WARN  main 2018-05-01 15:19:50,086 com.test.test.util.search.SearchServerLauncherHostLocator.getNullServerUrlSupplier(SearchServerLauncherHostLocator.java:33) - Returning null Search URL Supplier. If search functionality is required, override the searchServerUrlSupplier bean to supply the actual Search host URL.
WARN  main 2018-05-01 15:19:50,667 org.apache.openjpa.lib.log.SLF4JLogFactory$LogAdapter.warn(SLF4JLogFactory.java:103) - Field "com.test.domain.tax.impl.TaxCategoryImpl.localizedPropertiesMap" declares that it uses class criteria for joins, and this field is not owned by an inverse field.  As a result, it is impossible to correctly null the inverse foreign keys when the field is deleted.  OpenJPA may leave orphan key values in the database if you do not provide an owning inverse relation using the "mapped-by" attribute.
WARN  main 2018-05-01 15:19:50,685 org.apache.openjpa.lib.log.SLF4JLogFactory$LogAdapter.warn(SLF4JLogFactory.java:103) - Field "com.test.domain.rules.impl.AbstractRuleImpl.localizedPropertiesMap" declares that it uses class criteria for joins, and this field is not owned by an inverse field.  As a result, it is impossible to correctly null the inverse foreign keys when the field is deleted.  OpenJPA may leave orphan key values in the database if you do not provide an owning inverse relation using the "mapped-by" attribute.
WARN  main 2018-05-01 15:19:50,773 org.apache.openjpa.lib.log.SLF4JLogFactory$LogAdapter.warn(SLF4JLogFactory.java:103) - Field "com.test.domain.skuconfiguration.impl.SkuOptionValueImpl.localizedPropertiesMap" declares that it uses class criteria for joins, and this field is not owned by an inverse field.  As a result, it is impossible to correctly null the inverse foreign keys when the field is deleted.  OpenJPA may leave orphan key values in the database if you do not provide an owning inverse relation using the "mapped-by" attribute.
WARN  main 2018-05-01 15:19:50,774 org.apache.openjpa.lib.log.SLF4JLogFactory$LogAdapter.warn(SLF4JLogFactory.java:103) - Field "com.test.domain.catalog.impl.BrandImpl.localizedPropertiesMap" declares that it uses class criteria for joins, and this field is not owned by an inverse field.  As a result, it is impossible to correctly null the inverse foreign keys when the field is deleted.  OpenJPA may leave orphan key values in the database if you do not provide an owning inverse relation using the "mapped-by" attribute.
WARN  main 2018-05-01 15:19:50,775 org.apache.openjpa.lib.log.SLF4JLogFactory$LogAdapter.warn(SLF4JLogFactory.java:103) - Field "com.test.domain.skuconfiguration.impl.SkuOptionImpl.localizedPropertiesMap" declares that it uses class criteria for joins, and this field is not owned by an inverse field.  As a result, it is impossible to correctly null the inverse foreign keys when the field is deleted.  OpenJPA may leave orphan key values in the database if you do not provide an owning inverse relation using the "mapped-by" attribute.
WARN  main 2018-05-01 15:19:50,806 org.apache.openjpa.lib.log.SLF4JLogFactory$LogAdapter.warn(SLF4JLogFactory.java:103) - Field "com.test.tags.domain.impl.TagDefinitionImpl.localizedPropertiesMap" declares that it uses class criteria for joins, and this field is not owned by an inverse field.  As a result, it is impossible to correctly null the inverse foreign keys when the field is deleted.  OpenJPA may leave orphan key values in the database if you do not provide an owning inverse relation using the "mapped-by" attribute.
WARN  main 2018-05-01 15:19:50,807 org.apache.openjpa.lib.log.SLF4JLogFactory$LogAdapter.warn(SLF4JLogFactory.java:103) - Field "com.test.tags.domain.impl.TagGroupImpl.localizedPropertiesMap" declares that it uses class criteria for joins, and this field is not owned by an inverse field.  As a result, it is impossible to correctly null the inverse foreign keys when the field is deleted.  OpenJPA may leave orphan key values in the database if you do not provide an owning inverse relation using the "mapped-by" attribute.
WARN  main 2018-05-01 15:19:50,808 org.apache.openjpa.lib.log.SLF4JLogFactory$LogAdapter.warn(SLF4JLogFactory.java:103) - Field "com.test.tags.domain.impl.TagValueTypeImpl.validationConstraints" declares that it uses class criteria for joins, and this field is not owned by an inverse field.  As a result, it is impossible to correctly null the inverse foreign keys when the field is deleted.  OpenJPA may leave orphan key values in the database if you do not provide an owning inverse relation using the "mapped-by" attribute.
WARN  main 2018-05-01 15:19:50,809 org.apache.openjpa.lib.log.SLF4JLogFactory$LogAdapter.warn(SLF4JLogFactory.java:103) - Field "com.test.tags.domain.impl.TagAllowedValueImpl.localizedPropertiesMap" declares that it uses class criteria for joins, and this field is not owned by an inverse field.  As a result, it is impossible to correctly null the inverse foreign keys when the field is deleted.  OpenJPA may leave orphan key values in the database if you do not provide an owning inverse relation using the "mapped-by" attribute.
WARN  main 2018-05-01 15:19:50,809 org.apache.openjpa.lib.log.SLF4JLogFactory$LogAdapter.warn(SLF4JLogFactory.java:103) - Field "com.test.tags.domain.impl.TagOperatorImpl.localizedPropertiesMap" declares that it uses class criteria for joins, and this field is not owned by an inverse field.  As a result, it is impossible to correctly null the inverse foreign keys when the field is deleted.  OpenJPA may leave orphan key values in the database if you do not provide an owning inverse relation using the "mapped-by" attribute.
WARN  main 2018-05-01 15:19:50,810 org.apache.openjpa.lib.log.SLF4JLogFactory$LogAdapter.warn(SLF4JLogFactory.java:103) - Field "com.test.validation.domain.impl.DeclarativeValidationConstraintImpl.localizedPropertiesMap" declares that it uses class criteria for joins, and this field is not owned by an inverse field.  As a result, it is impossible to correctly null the inverse foreign keys when the field is deleted.  OpenJPA may leave orphan key values in the database if you do not provide an owning inverse relation using the "mapped-by" attribute.
WARN  main 2018-05-01 15:19:50,897 org.apache.openjpa.lib.log.SLF4JLogFactory$LogAdapter.warn(SLF4JLogFactory.java:103) - Field "com.test.domain.shipping.impl.ShippingServiceLevelImpl.localizedPropertiesMap" declares that it uses class criteria for joins, and this field is not owned by an inverse field.  As a result, it is impossible to correctly null the inverse foreign keys when the field is deleted.  OpenJPA may leave orphan key values in the database if you do not provide an owning inverse relation using the "mapped-by" attribute.
WARN  main 2018-05-01 15:19:50,989 com.test.persistence.impl.PersistablePostLoadListener.getPostLoadStrategies(PersistablePostLoadListener.java:72) - PersistablePostLoadListener lazy initialization failed because the context is still being initialized and bean [customerPostLoadStrategy] could not be created as a result.This is generally OK as long as it stops happening after the spring context is up.  Will retry on next invocation
WARN  main 2018-05-01 15:19:50,990 com.test.persistence.impl.PersistablePostLoadListener.getPostLoadStrategies(PersistablePostLoadListener.java:72) - PersistablePostLoadListener lazy initialization failed because the context is still being initialized and bean [customerPostLoadStrategy] could not be created as a result.This is generally OK as long as it stops happening after the spring context is up.  Will retry on next invocation
WARN  main 2018-05-01 15:19:50,991 com.test.persistence.impl.PersistablePostLoadListener.getPostLoadStrategies(PersistablePostLoadListener.java:72) - PersistablePostLoadListener lazy initialization failed because the context is still being initialized and bean [customerPostLoadStrategy] could not be created as a result.This is generally OK as long as it stops happening after the spring context is up.  Will retry on next invocation
INFO  main 2018-05-01 15:19:52,286 com.test.commons.util.impl.VersionLogger.init(VersionLogger.java:30) - Commerce Build Information: null 0-SNAPSHOT (r 2018-04-30 09:04:49 PDT ) by null
ERROR main 2018-05-01 15:19:52,323 com.test.commons.util.impl.MessageSourceCacheImpl.init(MessageSourceCacheImpl.java:92) - Theme asset directory not found: C:\Source\ep-commerce\commerce-engine\core\ep-core-itests\target\test-classes\assets\themes
ERROR main 2018-05-01 15:19:52,401 com.test.commons.util.impl.MessageSourceCacheImpl.init(MessageSourceCacheImpl.java:92) - Theme asset directory not found: C:\Source\ep-commerce\commerce-engine\core\ep-core-itests\target\test-classes\assets\themes
INFO  main 2018-05-01 15:19:52,527 org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:441) - Closing JPA EntityManagerFactory for persistence unit 'commerce-persistence-unit'
]]></system-out>
    <system-err><![CDATA[INFO 01/05/18 3:19 PM: liquibase: Successfully acquired change log lock
INFO 01/05/18 3:19 PM: liquibase: Creating database history table with name: PUBLIC.DATABASECHANGELOG
INFO 01/05/18 3:19 PM: liquibase: Reading from PUBLIC.DATABASECHANGELOG
INFO 01/05/18 3:19 PM: liquibase: Successfully released change log lock
]]></system-err>
  </testcase>
  <testcase name="verifyFindByKeyAndLocationReturnsNullWhenDoesntExist" classname="com.test.TestServiceImplTest" time="9.754"/>
  <testcase name="verifyLoadsTestWhenUsingFindByGuidListAndTestsExists" classname="com.test.TestServiceImplTest" time="9.397">
    <failure message="&#10;Expected size:&lt;1&gt; but was:&lt;2&gt; in:&#10;&lt;[com.test.domain.test.impl.TestImpl@5f37f4ab,&#10;    com.test.domain.test.impl.TestImpl@f7a23e17]&gt;" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: 
Expected size:<1> but was:<2> in:
<[com.test.domain.test.impl.TestImpl@5f37f4ab,
    com.test.domain.test.impl.TestImpl@f7a23e17]>
	at com.test.TestServiceImplTest.verifyLoadsTestWhenUsingFindByGuidListAndTestsExists(TestServiceImplTest.java:98)
]]></failure>
    <system-out><![CDATA[INFO  main 2018-05-01 15:20:09,416 org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:287) - Building JPA container EntityManagerFactory for persistence unit 'commerce-persistence-unit'
WARN  main 2018-05-01 15:20:09,448 org.apache.openjpa.lib.log.SLF4JLogFactory$LogAdapter.warn(SLF4JLogFactory.java:103) - An error occurred while registering a ClassTransformer with PersistenceUnitInfo: name 'commerce-persistence-unit', root URL [file:/C:/Users/user/.m2/repository/com/test/shipping-calculation-epcommerce/0-SNAPSHOT/shipping-calculation-epcommerce-0-SNAPSHOT.jar]. The error has been consumed. To see it, set your openjpa.Runtime log level to TRACE. Load-time class transformation will not be available.
WARN  main 2018-05-01 15:20:09,465 com.test.test.util.search.SearchServerLauncherHostLocator.getNullServerUrlSupplier(SearchServerLauncherHostLocator.java:33) - Returning null Search URL Supplier. If search functionality is required, override the searchServerUrlSupplier bean to supply the actual Search host URL.
WARN  main 2018-05-01 15:20:09,854 org.apache.openjpa.lib.log.SLF4JLogFactory$LogAdapter.warn(SLF4JLogFactory.java:103) - Field "com.test.domain.tax.impl.TaxCategoryImpl.localizedPropertiesMap" declares that it uses class criteria for joins, and this field is not owned by an inverse field.  As a result, it is impossible to correctly null the inverse foreign keys when the field is deleted.  OpenJPA may leave orphan key values in the database if you do not provide an owning inverse relation using the "mapped-by" attribute.
WARN  main 2018-05-01 15:20:09,874 org.apache.openjpa.lib.log.SLF4JLogFactory$LogAdapter.warn(SLF4JLogFactory.java:103) - Field "com.test.domain.rules.impl.AbstractRuleImpl.localizedPropertiesMap" declares that it uses class criteria for joins, and this field is not owned by an inverse field.  As a result, it is impossible to correctly null the inverse foreign keys when the field is deleted.  OpenJPA may leave orphan key values in the database if you do not provide an owning inverse relation using the "mapped-by" attribute.
WARN  main 2018-05-01 15:20:09,971 org.apache.openjpa.lib.log.SLF4JLogFactory$LogAdapter.warn(SLF4JLogFactory.java:103) - Field "com.test.domain.skuconfiguration.impl.SkuOptionValueImpl.localizedPropertiesMap" declares that it uses class criteria for joins, and this field is not owned by an inverse field.  As a result, it is impossible to correctly null the inverse foreign keys when the field is deleted.  OpenJPA may leave orphan key values in the database if you do not provide an owning inverse relation using the "mapped-by" attribute.
WARN  main 2018-05-01 15:20:09,972 org.apache.openjpa.lib.log.SLF4JLogFactory$LogAdapter.warn(SLF4JLogFactory.java:103) - Field "com.test.domain.catalog.impl.BrandImpl.localizedPropertiesMap" declares that it uses class criteria for joins, and this field is not owned by an inverse field.  As a result, it is impossible to correctly null the inverse foreign keys when the field is deleted.  OpenJPA may leave orphan key values in the database if you do not provide an owning inverse relation using the "mapped-by" attribute.
WARN  main 2018-05-01 15:20:09,973 org.apache.openjpa.lib.log.SLF4JLogFactory$LogAdapter.warn(SLF4JLogFactory.java:103) - Field "com.test.domain.skuconfiguration.impl.SkuOptionImpl.localizedPropertiesMap" declares that it uses class criteria for joins, and this field is not owned by an inverse field.  As a result, it is impossible to correctly null the inverse foreign keys when the field is deleted.  OpenJPA may leave orphan key values in the database if you do not provide an owning inverse relation using the "mapped-by" attribute.
WARN  main 2018-05-01 15:20:10,003 org.apache.openjpa.lib.log.SLF4JLogFactory$LogAdapter.warn(SLF4JLogFactory.java:103) - Field "com.test.tags.domain.impl.TagDefinitionImpl.localizedPropertiesMap" declares that it uses class criteria for joins, and this field is not owned by an inverse field.  As a result, it is impossible to correctly null the inverse foreign keys when the field is deleted.  OpenJPA may leave orphan key values in the database if you do not provide an owning inverse relation using the "mapped-by" attribute.
WARN  main 2018-05-01 15:20:10,004 org.apache.openjpa.lib.log.SLF4JLogFactory$LogAdapter.warn(SLF4JLogFactory.java:103) - Field "com.test.tags.domain.impl.TagGroupImpl.localizedPropertiesMap" declares that it uses class criteria for joins, and this field is not owned by an inverse field.  As a result, it is impossible to correctly null the inverse foreign keys when the field is deleted.  OpenJPA may leave orphan key values in the database if you do not provide an owning inverse relation using the "mapped-by" attribute.
WARN  main 2018-05-01 15:20:10,005 org.apache.openjpa.lib.log.SLF4JLogFactory$LogAdapter.warn(SLF4JLogFactory.java:103) - Field "com.test.tags.domain.impl.TagValueTypeImpl.validationConstraints" declares that it uses class criteria for joins, and this field is not owned by an inverse field.  As a result, it is impossible to correctly null the inverse foreign keys when the field is deleted.  OpenJPA may leave orphan key values in the database if you do not provide an owning inverse relation using the "mapped-by" attribute.
WARN  main 2018-05-01 15:20:10,006 org.apache.openjpa.lib.log.SLF4JLogFactory$LogAdapter.warn(SLF4JLogFactory.java:103) - Field "com.test.tags.domain.impl.TagAllowedValueImpl.localizedPropertiesMap" declares that it uses class criteria for joins, and this field is not owned by an inverse field.  As a result, it is impossible to correctly null the inverse foreign keys when the field is deleted.  OpenJPA may leave orphan key values in the database if you do not provide an owning inverse relation using the "mapped-by" attribute.
WARN  main 2018-05-01 15:20:10,007 org.apache.openjpa.lib.log.SLF4JLogFactory$LogAdapter.warn(SLF4JLogFactory.java:103) - Field "com.test.tags.domain.impl.TagOperatorImpl.localizedPropertiesMap" declares that it uses class criteria for joins, and this field is not owned by an inverse field.  As a result, it is impossible to correctly null the inverse foreign keys when the field is deleted.  OpenJPA may leave orphan key values in the database if you do not provide an owning inverse relation using the "mapped-by" attribute.
WARN  main 2018-05-01 15:20:10,008 org.apache.openjpa.lib.log.SLF4JLogFactory$LogAdapter.warn(SLF4JLogFactory.java:103) - Field "com.test.validation.domain.impl.DeclarativeValidationConstraintImpl.localizedPropertiesMap" declares that it uses class criteria for joins, and this field is not owned by an inverse field.  As a result, it is impossible to correctly null the inverse foreign keys when the field is deleted.  OpenJPA may leave orphan key values in the database if you do not provide an owning inverse relation using the "mapped-by" attribute.
WARN  main 2018-05-01 15:20:10,109 org.apache.openjpa.lib.log.SLF4JLogFactory$LogAdapter.warn(SLF4JLogFactory.java:103) - Field "com.test.domain.shipping.impl.ShippingServiceLevelImpl.localizedPropertiesMap" declares that it uses class criteria for joins, and this field is not owned by an inverse field.  As a result, it is impossible to correctly null the inverse foreign keys when the field is deleted.  OpenJPA may leave orphan key values in the database if you do not provide an owning inverse relation using the "mapped-by" attribute.
WARN  main 2018-05-01 15:20:10,199 com.test.persistence.impl.PersistablePostLoadListener.getPostLoadStrategies(PersistablePostLoadListener.java:72) - PersistablePostLoadListener lazy initialization failed because the context is still being initialized and bean [customerPostLoadStrategy] could not be created as a result.This is generally OK as long as it stops happening after the spring context is up.  Will retry on next invocation
WARN  main 2018-05-01 15:20:10,200 com.test.persistence.impl.PersistablePostLoadListener.getPostLoadStrategies(PersistablePostLoadListener.java:72) - PersistablePostLoadListener lazy initialization failed because the context is still being initialized and bean [customerPostLoadStrategy] could not be created as a result.This is generally OK as long as it stops happening after the spring context is up.  Will retry on next invocation
WARN  main 2018-05-01 15:20:10,201 com.test.persistence.impl.PersistablePostLoadListener.getPostLoadStrategies(PersistablePostLoadListener.java:72) - PersistablePostLoadListener lazy initialization failed because the context is still being initialized and bean [customerPostLoadStrategy] could not be created as a result.This is generally OK as long as it stops happening after the spring context is up.  Will retry on next invocation
INFO  main 2018-05-01 15:20:11,439 com.test.commons.util.impl.VersionLogger.init(VersionLogger.java:30) - Commerce Build Information: null 0-SNAPSHOT (r 2018-04-30 09:04:49 PDT ) by null
ERROR main 2018-05-01 15:20:11,471 com.test.commons.util.impl.MessageSourceCacheImpl.init(MessageSourceCacheImpl.java:92) - Theme asset directory not found: C:\Source\ep-commerce\commerce-engine\core\ep-core-itests\target\test-classes\assets\themes
ERROR main 2018-05-01 15:20:11,538 com.test.commons.util.impl.MessageSourceCacheImpl.init(MessageSourceCacheImpl.java:92) - Theme asset directory not found: C:\Source\ep-commerce\commerce-engine\core\ep-core-itests\target\test-classes\assets\themes
INFO  main 2018-05-01 15:20:11,677 org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:441) - Closing JPA EntityManagerFactory for persistence unit 'commerce-persistence-unit'
]]></system-out>
    <system-err><![CDATA[INFO 01/05/18 3:20 PM: liquibase: Successfully acquired change log lock
INFO 01/05/18 3:20 PM: liquibase: Creating database history table with name: PUBLIC.DATABASECHANGELOG
INFO 01/05/18 3:20 PM: liquibase: Successfully released change log lock
]]></system-err>
  </testcase>
  <testcase name="verifyFindWithRevokedConsentsLatestReturnsEmptyMapWhenThereIsGrantedConsentForTheClashingTest" classname="com.test.TestServiceImplTest" time="9.584"/>
  <testcase name="verifyFindByNameReturnsTestWhenExists" classname="com.test.TestServiceImplTest" time="9.666"/>
  <testcase name="verifyFindWithGrantedConsentsLatestReturnsOneKeyOneTestOneTestMapWhenOnlyOneTestFound" classname="com.test.TestServiceImplTest" time="9.406"/>
  <testcase name="verifyFindUniqueForTestReturnsTestWhenFound" classname="com.test.TestServiceImplTest" time="9.734"/>
  <testcase name="verifyFindWithRevokedConsentsLatestReturnsEmptyMapWhenNoRemovableTestFound" classname="com.test.TestServiceImplTest" time="10.038"/>
  <testcase name="verifyFindWithGrantedConsentsLatestReturnsOneKeyTwoTestOneTestMap" classname="com.test.TestServiceImplTest" time="9.941"/>
  <testcase name="verifyFindByNameReturnsTestWhenExistsAndDoesntMatchCase" classname="com.test.TestServiceImplTest" time="9.725"/>
  <testcase name="verifyFindWithGrantedConsentsLatestReturnsOneKeysTwoTestOneTestMapWhenOnePolicyRevokedForACustomer" classname="com.test.TestServiceImplTest" time="10.986"/>
  <testcase name="verifyFindWithRevokedConsentsLatestReturnsOneKeyOneTestTwoTestMap" classname="com.test.TestServiceImplTest" time="10.035"/>
  <testcase name="verifySavesNewTestWhenUsingSaveMethod" classname="com.test.TestServiceImplTest" time="9.535">
    <failure message="expected:&lt;null&gt; but was:&lt;com.test.domain.test.impl.TestImpl@4fc2f175&gt;" type="org.junit.ComparisonFailure"><![CDATA[org.junit.ComparisonFailure: expected:<null> but was:<com.test.domain.test.impl.TestImpl@4fc2f175>
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at com.test.TestServiceImplTest.verifySavesNewTestWhenUsingSaveMethod(TestServiceImplTest.java:48)
]]></failure>
    <system-out><![CDATA[INFO  main 2018-05-01 15:21:47,878 org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:287) - Building JPA container EntityManagerFactory for persistence unit 'commerce-persistence-unit'
    <system-out><![CDATA[INFO  main 2018-05-01 15:21:47,878 org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:287) - Building JPA container EntityManagerFactory for persistence unit 'commerce-persistence-unit'
WARN  main 2018-05-01 15:21:47,909 org.apache.openjpa.lib.log.SLF4JLogFactory$LogAdapter.warn(SLF4JLogFactory.java:103) - An error occurred while registering a ClassTransformer with PersistenceUnitInfo: name 'commerce-persistence-unit', root URL [file:/C:/Users/user/.m2/repository/com/test/shipping-calculation-epcommerce/0-SNAPSHOT/shipping-calculation-epcommerce-0-SNAPSHOT.jar]. The error has been consumed. To see it, set your openjpa.Runtime log level to TRACE. Load-time class transformation will not be available.
WARN  main 2018-05-01 15:21:47,935 com.test.test.util.search.SearchServerLauncherHostLocator.getNullServerUrlSupplier(SearchServerLauncherHostLocator.java:33) - Returning null Search URL Supplier. If search functionality is required, override the searchServerUrlSupplier bean to supply the actual Search host URL.
WARN  main 2018-05-01 15:21:48,421 org.apache.openjpa.lib.log.SLF4JLogFactory$LogAdapter.warn(SLF4JLogFactory.java:103) - Field "com.test.domain.tax.impl.TaxCategoryImpl.localizedPropertiesMap" declares that it uses class criteria for joins, and this field is not owned by an inverse field.  As a result, it is impossible to correctly null the inverse foreign keys when the field is deleted.  OpenJPA may leave orphan key values in the database if you do not provide an owning inverse relation using the "mapped-by" attribute.
WARN  main 2018-05-01 15:21:48,441 org.apache.openjpa.lib.log.SLF4JLogFactory$LogAdapter.warn(SLF4JLogFactory.java:103) - Field "com.test.domain.rules.impl.AbstractRuleImpl.localizedPropertiesMap" declares that it uses class criteria for joins, and this field is not owned by an inverse field.  As a result, it is impossible to correctly null the inverse foreign keys when the field is deleted.  OpenJPA may leave orphan key values in the database if you do not provide an owning inverse relation using the "mapped-by" attribute.
WARN  main 2018-05-01 15:21:48,539 org.apache.openjpa.lib.log.SLF4JLogFactory$LogAdapter.warn(SLF4JLogFactory.java:103) - Field "com.test.domain.skuconfiguration.impl.SkuOptionValueImpl.localizedPropertiesMap" declares that it uses class criteria for joins, and this field is not owned by an inverse field.  As a result, it is impossible to correctly null the inverse foreign keys when the field is deleted.  OpenJPA may leave orphan key values in the database if you do not provide an owning inverse relation using the "mapped-by" attribute.
WARN  main 2018-05-01 15:21:48,540 org.apache.openjpa.lib.log.SLF4JLogFactory$LogAdapter.warn(SLF4JLogFactory.java:103) - Field "com.test.domain.catalog.impl.BrandImpl.localizedPropertiesMap" declares that it uses class criteria for joins, and this field is not owned by an inverse field.  As a result, it is impossible to correctly null the inverse foreign keys when the field is deleted.  OpenJPA may leave orphan key values in the database if you do not provide an owning inverse relation using the "mapped-by" attribute.
WARN  main 2018-05-01 15:21:48,541 org.apache.openjpa.lib.log.SLF4JLogFactory$LogAdapter.warn(SLF4JLogFactory.java:103) - Field "com.test.domain.skuconfiguration.impl.SkuOptionImpl.localizedPropertiesMap" declares that it uses class criteria for joins, and this field is not owned by an inverse field.  As a result, it is impossible to correctly null the inverse foreign keys when the field is deleted.  OpenJPA may leave orphan key values in the database if you do not provide an owning inverse relation using the "mapped-by" attribute.
WARN  main 2018-05-01 15:21:48,565 org.apache.openjpa.lib.log.SLF4JLogFactory$LogAdapter.warn(SLF4JLogFactory.java:103) - Field "com.test.tags.domain.impl.TagDefinitionImpl.localizedPropertiesMap" declares that it uses class criteria for joins, and this field is not owned by an inverse field.  As a result, it is impossible to correctly null the inverse foreign keys when the field is deleted.  OpenJPA may leave orphan key values in the database if you do not provide an owning inverse relation using the "mapped-by" attribute.
WARN  main 2018-05-01 15:21:48,566 org.apache.openjpa.lib.log.SLF4JLogFactory$LogAdapter.warn(SLF4JLogFactory.java:103) - Field "com.test.tags.domain.impl.TagGroupImpl.localizedPropertiesMap" declares that it uses class criteria for joins, and this field is not owned by an inverse field.  As a result, it is impossible to correctly null the inverse foreign keys when the field is deleted.  OpenJPA may leave orphan key values in the database if you do not provide an owning inverse relation using the "mapped-by" attribute.
WARN  main 2018-05-01 15:21:48,567 org.apache.openjpa.lib.log.SLF4JLogFactory$LogAdapter.warn(SLF4JLogFactory.java:103) - Field "com.test.tags.domain.impl.TagValueTypeImpl.validationConstraints" declares that it uses class criteria for joins, and this field is not owned by an inverse field.  As a result, it is impossible to correctly null the inverse foreign keys when the field is deleted.  OpenJPA may leave orphan key values in the database if you do not provide an owning inverse relation using the "mapped-by" attribute.
WARN  main 2018-05-01 15:21:48,567 org.apache.openjpa.lib.log.SLF4JLogFactory$LogAdapter.warn(SLF4JLogFactory.java:103) - Field "com.test.tags.domain.impl.TagAllowedValueImpl.localizedPropertiesMap" declares that it uses class criteria for joins, and this field is not owned by an inverse field.  As a result, it is impossible to correctly null the inverse foreign keys when the field is deleted.  OpenJPA may leave orphan key values in the database if you do not provide an owning inverse relation using the "mapped-by" attribute.
WARN  main 2018-05-01 15:21:48,568 org.apache.openjpa.lib.log.SLF4JLogFactory$LogAdapter.warn(SLF4JLogFactory.java:103) - Field "com.test.tags.domain.impl.TagOperatorImpl.localizedPropertiesMap" declares that it uses class criteria for joins, and this field is not owned by an inverse field.  As a result, it is impossible to correctly null the inverse foreign keys when the field is deleted.  OpenJPA may leave orphan key values in the database if you do not provide an owning inverse relation using the "mapped-by" attribute.
WARN  main 2018-05-01 15:21:48,569 org.apache.openjpa.lib.log.SLF4JLogFactory$LogAdapter.warn(SLF4JLogFactory.java:103) - Field "com.test.validation.domain.impl.DeclarativeValidationConstraintImpl.localizedPropertiesMap" declares that it uses class criteria for joins, and this field is not owned by an inverse field.  As a result, it is impossible to correctly null the inverse foreign keys when the field is deleted.  OpenJPA may leave orphan key values in the database if you do not provide an owning inverse relation using the "mapped-by" attribute.
WARN  main 2018-05-01 15:21:48,663 org.apache.openjpa.lib.log.SLF4JLogFactory$LogAdapter.warn(SLF4JLogFactory.java:103) - Field "com.test.domain.shipping.impl.ShippingServiceLevelImpl.localizedPropertiesMap" declares that it uses class criteria for joins, and this field is not owned by an inverse field.  As a result, it is impossible to correctly null the inverse foreign keys when the field is deleted.  OpenJPA may leave orphan key values in the database if you do not provide an owning inverse relation using the "mapped-by" attribute.
WARN  main 2018-05-01 15:21:48,757 com.test.persistence.impl.PersistablePostLoadListener.getPostLoadStrategies(PersistablePostLoadListener.java:72) - PersistablePostLoadListener lazy initialization failed because the context is still being initialized and bean [customerPostLoadStrategy] could not be created as a result.This is generally OK as long as it stops happening after the spring context is up.  Will retry on next invocation
WARN  main 2018-05-01 15:21:48,758 com.test.persistence.impl.PersistablePostLoadListener.getPostLoadStrategies(PersistablePostLoadListener.java:72) - PersistablePostLoadListener lazy initialization failed because the context is still being initialized and bean [customerPostLoadStrategy] could not be created as a result.This is generally OK as long as it stops happening after the spring context is up.  Will retry on next invocation
WARN  main 2018-05-01 15:21:48,759 com.test.persistence.impl.PersistablePostLoadListener.getPostLoadStrategies(PersistablePostLoadListener.java:72) - PersistablePostLoadListener lazy initialization failed because the context is still being initialized and bean [customerPostLoadStrategy] could not be created as a result.This is generally OK as long as it stops happening after the spring context is up.  Will retry on next invocation
INFO  main 2018-05-01 15:21:50,092 com.test.commons.util.impl.VersionLogger.init(VersionLogger.java:30) - Commerce Build Information: null 0-SNAPSHOT (r 2018-04-30 09:04:49 PDT ) by null
ERROR main 2018-05-01 15:21:50,126 com.test.commons.util.impl.MessageSourceCacheImpl.init(MessageSourceCacheImpl.java:92) - Theme asset directory not found: C:\Source\ep-commerce\commerce-engine\core\ep-core-itests\target\test-classes\assets\themes
ERROR main 2018-05-01 15:21:50,197 com.test.commons.util.impl.MessageSourceCacheImpl.init(MessageSourceCacheImpl.java:92) - Theme asset directory not found: C:\Source\ep-commerce\commerce-engine\core\ep-core-itests\target\test-classes\assets\themes
INFO  main 2018-05-01 15:21:50,328 org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:441) - Closing JPA EntityManagerFactory for persistence unit 'commerce-persistence-unit'
]]></system-out>
    <system-err><![CDATA[INFO 01/05/18 3:21 PM: liquibase: Successfully acquired change log lock
INFO 01/05/18 3:21 PM: liquibase: Creating database history table with name: PUBLIC.DATABASECHANGELOG
INFO 01/05/18 3:21 PM: liquibase: Successfully released change log lock
]]></system-err>
  </testcase>
  <testcase name="verifyLoadsTestWhenUsingFindByGuidAndTestExists" classname="com.test.TestServiceImplTest" time="9.873"/>
  <testcase name="verifyFindByNameReturnsNullWhenDoesntExist" classname="com.test.TestServiceImplTest" time="9.556"/>
  <testcase name="verifyFindWithRevokedConsentsLatestReturnsTwoKeysTwoTestOneTestMap" classname="com.test.TestServiceImplTest" time="9.473"/>
  <testcase name="verifyReturnsNullWhenUsingFindByGuidListAndTestsDoNotExists" classname="com.test.TestServiceImplTest" time="9.473"/>
  <testcase name="verifyDbExceptionIsThrownWhenTryingToSaveTestWithExistingName" classname="com.test.TestServiceImplTest" time="9.148"/>
</testsuite>